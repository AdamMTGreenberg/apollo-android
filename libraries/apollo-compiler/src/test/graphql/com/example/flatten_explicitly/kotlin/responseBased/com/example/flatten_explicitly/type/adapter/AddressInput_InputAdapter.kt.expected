//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '4.0.0-beta.3-SNAPSHOT'.
//
package com.pinterest.myapolloforkapplication.type.adapter

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.NullableStringAdapter
import com.apollographql.apollo3.api.Optional
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.apollographql.apollo3.api.present
import com.pinterest.myapolloforkapplication.type.AddressInput
import kotlin.IllegalStateException

public object AddressInput_InputAdapter : Adapter<AddressInput> {
  override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
      AddressInput = throw IllegalStateException("Input type used in output position")

  override fun toJson(
    writer: JsonWriter,
    customScalarAdapters: CustomScalarAdapters,
    `value`: AddressInput,
  ) {
    if (value.street is Optional.Present) {
      writer.name("street")
      NullableStringAdapter.present().toJson(writer, customScalarAdapters, value.street)
    }
    if (value.suite is Optional.Present) {
      writer.name("suite")
      NullableStringAdapter.present().toJson(writer, customScalarAdapters, value.suite)
    }
    if (value.city is Optional.Present) {
      writer.name("city")
      NullableStringAdapter.present().toJson(writer, customScalarAdapters, value.city)
    }
    if (value.zipcode is Optional.Present) {
      writer.name("zipcode")
      NullableStringAdapter.present().toJson(writer, customScalarAdapters, value.zipcode)
    }
    if (value.geo is Optional.Present) {
      writer.name("geo")
      GeoInput_InputAdapter.obj().nullable().present().toJson(writer, customScalarAdapters,
          value.geo)
    }
  }
}
