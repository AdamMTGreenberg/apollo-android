//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '4.0.0-beta.3-SNAPSHOT'.
//
package com.pinterest.myapolloforkapplication.type.adapter

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.Optional
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.apollographql.apollo3.api.present
import com.pinterest.myapolloforkapplication.type.PageQueryOptions
import kotlin.IllegalStateException

public object PageQueryOptions_InputAdapter : Adapter<PageQueryOptions> {
  override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
      PageQueryOptions = throw IllegalStateException("Input type used in output position")

  override fun toJson(
    writer: JsonWriter,
    customScalarAdapters: CustomScalarAdapters,
    `value`: PageQueryOptions,
  ) {
    if (value.paginate is Optional.Present) {
      writer.name("paginate")
      PaginateOptions_InputAdapter.obj().nullable().present().toJson(writer, customScalarAdapters,
          value.paginate)
    }
    if (value.slice is Optional.Present) {
      writer.name("slice")
      SliceOptions_InputAdapter.obj().nullable().present().toJson(writer, customScalarAdapters,
          value.slice)
    }
    if (value.sort is Optional.Present) {
      writer.name("sort")
      SortOptions_InputAdapter.obj().nullable().list().nullable().present().toJson(writer,
          customScalarAdapters, value.sort)
    }
    if (value.operators is Optional.Present) {
      writer.name("operators")
      OperatorOptions_InputAdapter.obj().nullable().list().nullable().present().toJson(writer,
          customScalarAdapters, value.operators)
    }
    if (value.search is Optional.Present) {
      writer.name("search")
      SearchOptions_InputAdapter.obj().nullable().present().toJson(writer, customScalarAdapters,
          value.search)
    }
  }
}
