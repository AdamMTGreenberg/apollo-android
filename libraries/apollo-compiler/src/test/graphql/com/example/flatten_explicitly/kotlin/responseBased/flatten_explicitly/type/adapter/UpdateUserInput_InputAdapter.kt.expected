//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '4.0.0-beta.3-SNAPSHOT'.
//
package com.pinterest.myapolloforkapplication.type.adapter

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.NullableStringAdapter
import com.apollographql.apollo3.api.Optional
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.apollographql.apollo3.api.present
import com.pinterest.myapolloforkapplication.type.UpdateUserInput
import kotlin.IllegalStateException

public object UpdateUserInput_InputAdapter : Adapter<UpdateUserInput> {
  override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
      UpdateUserInput = throw IllegalStateException("Input type used in output position")

  override fun toJson(
    writer: JsonWriter,
    customScalarAdapters: CustomScalarAdapters,
    `value`: UpdateUserInput,
  ) {
    if (value.name is Optional.Present) {
      writer.name("name")
      NullableStringAdapter.present().toJson(writer, customScalarAdapters, value.name)
    }
    if (value.username is Optional.Present) {
      writer.name("username")
      NullableStringAdapter.present().toJson(writer, customScalarAdapters, value.username)
    }
    if (value.email is Optional.Present) {
      writer.name("email")
      NullableStringAdapter.present().toJson(writer, customScalarAdapters, value.email)
    }
    if (value.address is Optional.Present) {
      writer.name("address")
      AddressInput_InputAdapter.obj().nullable().present().toJson(writer, customScalarAdapters,
          value.address)
    }
    if (value.phone is Optional.Present) {
      writer.name("phone")
      NullableStringAdapter.present().toJson(writer, customScalarAdapters, value.phone)
    }
    if (value.website is Optional.Present) {
      writer.name("website")
      NullableStringAdapter.present().toJson(writer, customScalarAdapters, value.website)
    }
    if (value.company is Optional.Present) {
      writer.name("company")
      CompanyInput_InputAdapter.obj().nullable().present().toJson(writer, customScalarAdapters,
          value.company)
    }
  }
}
